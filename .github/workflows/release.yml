name: Build

on:
  # schedule: # execute every 24 hours
  #   - cron: "* */24 * * *"
  # pull_request:
  #   types: [ closed ]
  push:
    tags:
      - "v[0-9]+\\.[0-9]+\\.[0-9]+"

jobs:
  build-ubuntu:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Set version
        shell: bash
        id: version
        run: |
          REPOSITORY=$(echo ${{ github.repository }} | sed -e "s#.*/##")
          VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
          echo ::set-output name=version::$VERSION
          echo ::set-output name=filename::$REPOSITORY-$VERSION
          echo "Version $VERSION"

      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Python Poetry Action
        uses: abatilo/actions-poetry@v2.1.3

      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1.1


      - name: Setup Poetry
        run:  poetry install

      - name: build for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          poetry run python -m nuitka --assume-yes-for-downloads --standalone --no-prefer-source-code run.py
          cd run.dist
          curl -OL https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-n5.0-latest-linux64-lgpl-5.0.tar.xz
          tar -Jxvf ffmpeg-n5.0-latest-linux64-lgpl-5.0.tar.xz
          mv ffmpeg-n5.0-latest-linux64-lgpl-5.0/bin/ffmpeg ffmpeg
          rm -rf ffmpeg-n5.0-latest-linux64-lgpl-5.0/ ffmpeg-n5.0-latest-linux64-lgpl-5.0.tar.xz
          cd ..
          mv run.dist ${{ steps.version.outputs.filename }}-linux
          zip -r ${{ steps.version.outputs.filename }}-linux.zip ${{ steps.version.outputs.filename }}-linux

      - name: build for Windows
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          poetry run python -m nuitka --assume-yes-for-downloads --standalone run.py
          cd run.dist
          curl -OL https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-n5.0-latest-win64-lgpl-5.0.zip
          unzip ffmpeg-n5.0-latest-win64-lgpl-5.0.zip
          mv ffmpeg-n5.0-latest-win64-lgpl-5.0/bin/ffmpeg ffmpeg.exe
          rm -rf ffmpeg-n5.0-latest-win64-lgpl-5.0/ ffmpeg-n5.0-latest-win64-lgpl-5.0.zip
          cd ..
          mv run.dist ${{ steps.version.outputs.filename }}-windows
          powershell compress-archive ${{ steps.version.outputs.filename }}-windows ${{ steps.version.outputs.filename }}-windows.zip

      - name: GH Release
        uses: softprops/action-gh-release@v0.1.14
        with:
          generate_release_notes: true
          files: |
            ${{ steps.version.outputs.filename }}-linux.zip
            ${{ steps.version.outputs.filename }}-windows.zip
